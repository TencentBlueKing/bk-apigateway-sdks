// Code generated by MockGen. DO NOT EDIT.
// Source: provider.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	define "github.com/TencentBlueKing/bk-apigateway-sdks/bkapi-client-core/define"
	gomock "github.com/golang/mock/gomock"
)

// MockBodyProvider is a mock of BodyProvider interface.
type MockBodyProvider struct {
	ctrl     *gomock.Controller
	recorder *MockBodyProviderMockRecorder
}

// MockBodyProviderMockRecorder is the mock recorder for MockBodyProvider.
type MockBodyProviderMockRecorder struct {
	mock *MockBodyProvider
}

// NewMockBodyProvider creates a new mock instance.
func NewMockBodyProvider(ctrl *gomock.Controller) *MockBodyProvider {
	mock := &MockBodyProvider{ctrl: ctrl}
	mock.recorder = &MockBodyProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBodyProvider) EXPECT() *MockBodyProviderMockRecorder {
	return m.recorder
}

// ProvideBody mocks base method.
func (m *MockBodyProvider) ProvideBody(operation define.Operation, data interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProvideBody", operation, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProvideBody indicates an expected call of ProvideBody.
func (mr *MockBodyProviderMockRecorder) ProvideBody(operation, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProvideBody", reflect.TypeOf((*MockBodyProvider)(nil).ProvideBody), operation, data)
}
