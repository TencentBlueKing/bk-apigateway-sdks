basePath: /v2
definitions:
  api.ProductUpdates:
    properties:
      description:
        $ref: '#/definitions/sql.NullString'
      stock:
        $ref: '#/definitions/sql.NullInt64'
      type:
        $ref: '#/definitions/sql.NullString'
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
host: petstore.swagger.io
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /testapi/pet/get-pet-by-id/{pet_id}/:
    get:
      consumes:
      - application/json
      description: get pet by ID
      operationId: get-pet-by-id
      parameters:
      - description: pet id
        in: path
        name: pet_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: get a  pet
      x-bk-apigateway-resource:
        allowApplyPermission: true
        authConfig:
          appVerifiedRequired: false
          resourcePermissionRequired: false
          userVerifiedRequired: false
        backend:
          matchSubpath: false
          method: get
          path: /testapi/get-pet-by-id/{pet_id}/
        enableWebsocket: false
        isPublic: false
        matchSubpath: false
        pluginConfigs:
        - type: bk-cors
          yaml: |
            allow_origins: '*'
            allow_methods: '**'
            allow_headers: '**'
            expose_headers: ''
  /testapi/update-product/{product_id}:
    post:
      consumes:
      - application/json
      operationId: update-product
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: integer
      - description: ' '
        in: body
        name: productInfo
        required: true
        schema:
          $ref: '#/definitions/api.ProductUpdates'
      responses: {}
      summary: Update product attributes
      x-bk-apigateway-resource:
        allowApplyPermission: true
        authConfig:
          appVerifiedRequired: false
          resourcePermissionRequired: false
          userVerifiedRequired: false
        backend:
          matchSubpath: false
          method: post
          path: /testapi/product/
        enableWebsocket: false
        isPublic: true
        matchSubpath: false
        pluginConfigs:
        - type: bk-header-rewrite
          yaml: |
            set:
                - key: X-Test
                  value: test
            remove:
                - key: X-Test2
swagger: "2.0"
